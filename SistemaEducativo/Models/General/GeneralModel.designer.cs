#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaEducativo.Models.General
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PIAR")]
	public partial class GeneralModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertSede(Sede instance);
    partial void UpdateSede(Sede instance);
    partial void DeleteSede(Sede instance);
    partial void InsertDepartamento(Departamento instance);
    partial void UpdateDepartamento(Departamento instance);
    partial void DeleteDepartamento(Departamento instance);
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    #endregion
		
		public GeneralModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PIARConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeneralModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Sede> Sede
		{
			get
			{
				return this.GetTable<Sede>();
			}
		}
		
		public System.Data.Linq.Table<Departamento> Departamento
		{
			get
			{
				return this.GetTable<Departamento>();
			}
		}
		
		public System.Data.Linq.Table<Municipio> Municipio
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sede")]
	public partial class Sede : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private bool _Eliminado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEliminadoChanging(bool value);
    partial void OnEliminadoChanged();
    #endregion
		
		public Sede()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eliminado", DbType="Bit NOT NULL")]
		public bool Eliminado
		{
			get
			{
				return this._Eliminado;
			}
			set
			{
				if ((this._Eliminado != value))
				{
					this.OnEliminadoChanging(value);
					this.SendPropertyChanging();
					this._Eliminado = value;
					this.SendPropertyChanged("Eliminado");
					this.OnEliminadoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamento")]
	public partial class Departamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CodDepartamento;
		
		private string _NomDepartamento;
		
		private EntitySet<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCodDepartamentoChanging(string value);
    partial void OnCodDepartamentoChanged();
    partial void OnNomDepartamentoChanging(string value);
    partial void OnNomDepartamentoChanged();
    #endregion
		
		public Departamento()
		{
			this._Municipio = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipio), new Action<Municipio>(this.detach_Municipio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodDepartamento", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string CodDepartamento
		{
			get
			{
				return this._CodDepartamento;
			}
			set
			{
				if ((this._CodDepartamento != value))
				{
					this.OnCodDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._CodDepartamento = value;
					this.SendPropertyChanged("CodDepartamento");
					this.OnCodDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomDepartamento", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NomDepartamento
		{
			get
			{
				return this._NomDepartamento;
			}
			set
			{
				if ((this._NomDepartamento != value))
				{
					this.OnNomDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._NomDepartamento = value;
					this.SendPropertyChanged("NomDepartamento");
					this.OnNomDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Municipio", ThisKey="CodDepartamento", OtherKey="CodDepartamento")]
		public EntitySet<Municipio> Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				this._Municipio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = this;
		}
		
		private void detach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CodDepartamento;
		
		private string _CodMunicipio;
		
		private string _NomMunicipio;
		
		private EntityRef<Departamento> _Departamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCodDepartamentoChanging(string value);
    partial void OnCodDepartamentoChanged();
    partial void OnCodMunicipioChanging(string value);
    partial void OnCodMunicipioChanged();
    partial void OnNomMunicipioChanging(string value);
    partial void OnNomMunicipioChanged();
    #endregion
		
		public Municipio()
		{
			this._Departamento = default(EntityRef<Departamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodDepartamento", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string CodDepartamento
		{
			get
			{
				return this._CodDepartamento;
			}
			set
			{
				if ((this._CodDepartamento != value))
				{
					if (this._Departamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._CodDepartamento = value;
					this.SendPropertyChanged("CodDepartamento");
					this.OnCodDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMunicipio", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string CodMunicipio
		{
			get
			{
				return this._CodMunicipio;
			}
			set
			{
				if ((this._CodMunicipio != value))
				{
					this.OnCodMunicipioChanging(value);
					this.SendPropertyChanging();
					this._CodMunicipio = value;
					this.SendPropertyChanged("CodMunicipio");
					this.OnCodMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomMunicipio", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NomMunicipio
		{
			get
			{
				return this._NomMunicipio;
			}
			set
			{
				if ((this._NomMunicipio != value))
				{
					this.OnNomMunicipioChanging(value);
					this.SendPropertyChanging();
					this._NomMunicipio = value;
					this.SendPropertyChanged("NomMunicipio");
					this.OnNomMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Departamento", ThisKey="CodDepartamento", OtherKey="CodDepartamento", IsForeignKey=true)]
		public Departamento Departamento
		{
			get
			{
				return this._Departamento.Entity;
			}
			set
			{
				Departamento previousValue = this._Departamento.Entity;
				if (((previousValue != value) 
							|| (this._Departamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamento.Entity = null;
						previousValue.Municipio.Remove(this);
					}
					this._Departamento.Entity = value;
					if ((value != null))
					{
						value.Municipio.Add(this);
						this._CodDepartamento = value.CodDepartamento;
					}
					else
					{
						this._CodDepartamento = default(string);
					}
					this.SendPropertyChanged("Departamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
